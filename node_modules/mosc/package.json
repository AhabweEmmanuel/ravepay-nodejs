{
  "_args": [
    [
      {
        "raw": "mosc@1.0.0",
        "scope": null,
        "escapedName": "mosc",
        "name": "mosc",
        "rawSpec": "1.0.0",
        "spec": "1.0.0",
        "type": "version"
      },
      "C:\\uniserver\\www\\js projects\\ravepay-nodejs\\node_modules\\morx"
    ]
  ],
  "_from": "mosc@1.0.0",
  "_id": "mosc@1.0.0",
  "_inCache": true,
  "_location": "/mosc",
  "_nodeVersion": "4.4.7",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/mosc-1.0.0.tgz_1471168592671_0.5719831918831915"
  },
  "_npmUser": {
    "name": "4y0",
    "email": "ayodejsol@gmail.com"
  },
  "_npmVersion": "2.15.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "mosc@1.0.0",
    "scope": null,
    "escapedName": "mosc",
    "name": "mosc",
    "rawSpec": "1.0.0",
    "spec": "1.0.0",
    "type": "version"
  },
  "_requiredBy": [
    "/morx"
  ],
  "_resolved": "https://registry.npmjs.org/mosc/-/mosc-1.0.0.tgz",
  "_shasum": "4613da833270bb2eeebbf11a79a0cf8c270c9c2d",
  "_shrinkwrap": null,
  "_spec": "mosc@1.0.0",
  "_where": "C:\\uniserver\\www\\js projects\\ravepay-nodejs\\node_modules\\morx",
  "author": {
    "name": "4y0"
  },
  "bugs": {
    "url": "https://github.com/4y0/mosc/issues"
  },
  "dependencies": {},
  "description": "A simple inline javascript object model builder",
  "devDependencies": {
    "chai": "3.5.0",
    "mocha": "3.0.2"
  },
  "directories": {},
  "dist": {
    "shasum": "4613da833270bb2eeebbf11a79a0cf8c270c9c2d",
    "tarball": "https://registry.npmjs.org/mosc/-/mosc-1.0.0.tgz"
  },
  "gitHead": "d65887a5fc17512f5854296db86186e25c6894a6",
  "homepage": "https://github.com/4y0/mosc#readme",
  "keywords": [
    "object builder",
    "ORMS",
    "javascript",
    "nodejs"
  ],
  "license": "ISC",
  "main": "mosc.js",
  "maintainers": [
    {
      "name": "4y0",
      "email": "ayodejsol@gmail.com"
    }
  ],
  "name": "mosc",
  "optionalDependencies": {},
  "readme": "[![Build Status](https://travis-ci.org/4y0/mosc.svg?branch=master)](https://travis-ci.org/4y0/mosc)\n# Mosc.js (A simple inline object model builder)\n\n\nMosc.js is a simple inline object model builder for NodeJS (A small port exists for client-side javascript). It can be used to build ORM schemas, app configurations and a host of other valid object usecases. \n\nDon't like those pesky curly braces? Just:\n\n`npm install Mosc --save`\n\n```\nvar Mosc = require('mosc');\nvar mosc = new Mosc({});\nvar SimpleORMUserModel = mosc.build('title:string')\n\t\t\t\t\t\t\t .build('name:string')\n                             .build('age:integer')\n                             .end();\n```\n\n`SimpleORMUserModel` above becomes:\n```\n{\n\ttitle:\"string\",\n    name:\"string\",\n    age:\"integer\"\n}\n```\n\n## Pass in a context dictionary\nYou can pass a context dictionary argument for Mosc to use when evaluating certain placeholders in your build arguments\n```\nvar context_dictionary = {'SEQ':{string:'SEQUELIZE_STRING'}};\nvar result = new mosc(context_dictionary)\n                 .build('id', 'type:*SEQ*.string')\n                 .end();\n/*\n*SEQ*.string is evaluated using the context dictionary passed\nMosc looks for the property SEQ in the context dictionary, \nit then checks if there is a corresponding string property\nif there is, Mosq evaluates SEQ.string and returns the result hence:\nresult = {\n   id: {\n     type:'SEQUELIZE_STRING'\n   }\n}\nif there isn't MOSC throws a context not found in eval dict error\n*/\n```\n\nWith Mosc, it is also possible to do depth builds i.e object in object in object:\n```\nvar obj = mosc.buildIn('attributes.id'); \n/*\nobj = {\n\t\tattributes:\n        {\n        \tid:\n            {\n            \n            }\n        }\n      }\n*/\n```\n```\nvar obj = mosc.buildIn('attributes.id', 'type:String, primaryKey:true').end();\n/*\nobj = {\n\t\tattributes:\n        {\n        \tid:\n            {\n              type:'String',\n              primaryKey:true\n            }\n        }\n      }\n*/\n```\n(_For depth builds, the final path in the depth must be a valid object i.e 'attributes.id', id, if it exists, must be an object otherwise Mosc throws a 'Path must be an object error'_)",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/4y0/mosc.git"
  },
  "scripts": {
    "test": "mocha --reporter spec"
  },
  "version": "1.0.0"
}
